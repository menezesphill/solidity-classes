{
  "contractName": "Faucet",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimTime",
          "type": "uint256"
        }
      ],
      "name": "tokenAirdropped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "depositToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"tokenAirdropped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TokenFaucet.sol\":\"Faucet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/TokenFaucet.sol\":{\"keccak256\":\"0x9e8f4b34596b4a57d0386d699c6fd485e95d28c6985c7b111d83c85ae7509660\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc24d0a61914da4b5342b2a1404940094dc76d6db13127af269d6dc101b6b13\",\"dweb:/ipfs/QmcH3gW58uRtw1pxf3yxhi6j5otmN7yqw5VRqQqHfgUBwZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106c53803806106c583398101604081905261002f91610113565b610038336100c3565b6001600160a01b03811661009e5760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20616464726573732063616e27742062652061646472657373207a60448201526265726f60e81b606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610141565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610124578081fd5b81516001600160a01b038116811461013a578182fd5b9392505050565b610575806101506000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806348c54b9d146100675780636215be7714610071578063715018a6146100845780638da5cb5b1461008c578063f2fde38b146100b5578063fc0c546a146100c8575b600080fd5b61006f6100db565b005b61006f61007f366004610503565b6102b2565b61006f610381565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f6100c33660046104b5565b610395565b600154610099906001600160a01b031681565b336000908152600260205260409020600101546100fb906201518061051b565b421161014e5760405162461bcd60e51b815260206004820181905260248201527f5573657220636c61696d6564206c657373207468616e2032346872732061676f60448201526064015b60405180910390fd5b60006040518060400160405280336001600160a01b031681526020016101714290565b905233600081815260026020908152604091829020845181546001600160a01b0319166001600160a01b039182161782559185015160019182015554915163a9059cbb60e01b81526004810193909352678ac7230489e8000060248401529293509091169063a9059cbb90604401602060405180830381600087803b1580156101f957600080fd5b505af115801561020d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023191906104e3565b6102765760405162461bcd60e51b8152602060048201526016602482015275546f6b656e205472616e73666572204661696c65642160501b6044820152606401610145565b60208082015160405190815233917f910de9fea07d943818a6b89b3fda75573eea6b9b3a96e4a77ca02b05b62017be910160405180910390a250565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561030457600080fd5b505af1158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c91906104e3565b61037e5760405162461bcd60e51b81526020600482015260136024820152725472616e73616374696f6e204661696c65642160681b6044820152606401610145565b50565b61038961040b565b6103936000610465565b565b61039d61040b565b6001600160a01b0381166104025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610145565b61037e81610465565b6000546001600160a01b031633146103935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610145565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104c6578081fd5b81356001600160a01b03811681146104dc578182fd5b9392505050565b6000602082840312156104f4578081fd5b815180151581146104dc578182fd5b600060208284031215610514578081fd5b5035919050565b6000821982111561053a57634e487b7160e01b81526011600452602481fd5b50019056fea2646970667358221220c612a3beba92386b585a89f03a4f6770851fd58be331beda26a12aed23e063aa64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806348c54b9d146100675780636215be7714610071578063715018a6146100845780638da5cb5b1461008c578063f2fde38b146100b5578063fc0c546a146100c8575b600080fd5b61006f6100db565b005b61006f61007f366004610503565b6102b2565b61006f610381565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f6100c33660046104b5565b610395565b600154610099906001600160a01b031681565b336000908152600260205260409020600101546100fb906201518061051b565b421161014e5760405162461bcd60e51b815260206004820181905260248201527f5573657220636c61696d6564206c657373207468616e2032346872732061676f60448201526064015b60405180910390fd5b60006040518060400160405280336001600160a01b031681526020016101714290565b905233600081815260026020908152604091829020845181546001600160a01b0319166001600160a01b039182161782559185015160019182015554915163a9059cbb60e01b81526004810193909352678ac7230489e8000060248401529293509091169063a9059cbb90604401602060405180830381600087803b1580156101f957600080fd5b505af115801561020d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023191906104e3565b6102765760405162461bcd60e51b8152602060048201526016602482015275546f6b656e205472616e73666572204661696c65642160501b6044820152606401610145565b60208082015160405190815233917f910de9fea07d943818a6b89b3fda75573eea6b9b3a96e4a77ca02b05b62017be910160405180910390a250565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561030457600080fd5b505af1158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c91906104e3565b61037e5760405162461bcd60e51b81526020600482015260136024820152725472616e73616374696f6e204661696c65642160681b6044820152606401610145565b50565b61038961040b565b6103936000610465565b565b61039d61040b565b6001600160a01b0381166104025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610145565b61037e81610465565b6000546001600160a01b031633146103935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610145565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104c6578081fd5b81356001600160a01b03811681146104dc578182fd5b9392505050565b6000602082840312156104f4578081fd5b815180151581146104dc578182fd5b600060208284031215610514578081fd5b5035919050565b6000821982111561053a57634e487b7160e01b81526011600452602481fd5b50019056fea2646970667358221220c612a3beba92386b585a89f03a4f6770851fd58be331beda26a12aed23e063aa64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:743:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "108:229:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "154:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "163:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "171:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "156:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "156:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "156:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "129:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "138:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "125:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "150:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "121:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "118:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "189:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "208:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "202:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:16:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "193:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "281:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "290:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "298:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "283:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "283:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "283:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "240:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "251:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "266:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "271:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "262:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "262:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "275:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "258:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "258:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "247:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "247:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "237:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "237:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "230:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "227:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "316:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "326:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$698_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "74:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "85:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "97:6:9",
                "type": ""
              }
            ],
            "src": "14:323:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "516:225:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "533:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "544:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "526:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "526:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "567:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "578:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "563:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "563:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "583:2:9",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "556:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "556:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "606:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "617:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "602:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "602:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "622:34:9",
                        "type": "",
                        "value": "Token address can't be address z"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "595:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "595:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "595:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "677:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "688:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "673:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "673:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "693:5:9",
                        "type": "",
                        "value": "ero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "666:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "666:33:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "708:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "720:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "731:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "716:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "708:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e1acc0c79c7ca56987ee639045353e11bfe8d9f56f332bb7fc220e0bf4f558c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "493:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "507:4:9",
                "type": ""
              }
            ],
            "src": "342:399:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_ERC20_$698_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9e1acc0c79c7ca56987ee639045353e11bfe8d9f56f332bb7fc220e0bf4f558c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Token address can't be address z\")\n        mstore(add(headStart, 96), \"ero\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4178:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:9",
                "type": ""
              }
            ],
            "src": "14:306:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "403:219:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "449:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "458:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "466:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "451:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "451:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "451:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "424:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "433:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "420:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "420:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "416:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "416:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "413:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "484:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "503:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "497:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:16:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "488:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "566:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "575:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "583:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "568:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "568:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "568:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "535:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "556:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "549:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "549:13:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "542:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "542:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "532:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "532:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "522:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "601:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "611:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "601:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "380:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "392:6:9",
                "type": ""
              }
            ],
            "src": "325:297:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "697:120:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "743:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "752:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "760:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "745:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "745:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "745:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "718:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "727:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "714:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "714:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "739:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "710:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "710:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "707:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "778:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "801:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "788:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "788:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "778:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "663:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "674:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "686:6:9",
                "type": ""
              }
            ],
            "src": "627:190:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "923:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "933:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "945:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "956:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "941:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "933:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "975:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "990:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1006:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1011:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1002:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1002:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1015:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "998:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "998:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "986:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "986:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "968:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "968:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "903:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "914:4:9",
                "type": ""
              }
            ],
            "src": "822:203:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1187:218:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1197:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1209:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1220:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1205:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1205:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1197:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1232:29:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1250:3:9",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1255:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1246:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:11:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1259:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1242:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:19:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1236:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1277:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1292:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1300:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1288:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1270:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1270:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1270:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1324:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1335:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1320:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1320:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1344:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1352:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1340:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1340:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1313:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1313:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1313:43:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1376:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1387:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1372:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1372:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1392:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1365:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1365:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1140:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1151:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1159:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1167:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1178:4:9",
                "type": ""
              }
            ],
            "src": "1030:375:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1566:145:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1576:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1588:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1599:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1584:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1584:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1576:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1618:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1633:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1649:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1654:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1645:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1645:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1658:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1641:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1641:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1629:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1629:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1611:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1611:51:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1682:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1693:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1678:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1678:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1698:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1671:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1671:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1671:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_10000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1527:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1538:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1546:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1557:4:9",
                "type": ""
              }
            ],
            "src": "1410:301:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1830:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1840:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1852:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1863:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1848:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1848:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1840:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1882:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1897:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1913:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1918:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1909:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1909:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1922:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1905:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1905:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1893:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1893:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1875:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1875:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1875:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$698__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1799:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1810:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1821:4:9",
                "type": ""
              }
            ],
            "src": "1716:216:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2111:172:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2128:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2139:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2121:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2121:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2121:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2162:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2173:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2158:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2158:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2178:2:9",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2151:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2151:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2151:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2201:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2212:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2197:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2197:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2217:24:9",
                        "type": "",
                        "value": "Token Transfer Failed!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2190:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2190:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2190:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2251:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2263:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2274:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2259:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2259:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2251:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_10c700bd4f00d65f9a4fdc1c2b46e326cab0f7cfcffbbb0be0550bd3dd2213ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2088:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2102:4:9",
                "type": ""
              }
            ],
            "src": "1937:346:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2462:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2479:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2490:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2472:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2472:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2513:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2524:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2509:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2509:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2529:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2502:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2502:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2502:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2552:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2563:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2548:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2548:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2568:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2541:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2541:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2541:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2623:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2634:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2619:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2619:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2639:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2612:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2612:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2612:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2657:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2669:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2680:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2665:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2665:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2657:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2439:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2453:4:9",
                "type": ""
              }
            ],
            "src": "2288:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2869:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2886:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2897:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2879:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2879:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2879:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2920:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2931:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2916:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2916:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2936:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2909:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2909:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2909:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2959:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2970:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2955:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2955:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2975:34:9",
                        "type": "",
                        "value": "User claimed less than 24hrs ago"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2948:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2948:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2948:62:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3019:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3031:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3042:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3027:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3027:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3019:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_792276298ae008e353583c505bbe12270d1f9b4d0fdfeac39b599a549e632172__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2846:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2860:4:9",
                "type": ""
              }
            ],
            "src": "2695:356:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3230:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3247:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3258:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3240:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3240:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3240:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3281:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3292:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3277:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3277:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3297:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3270:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3270:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3270:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3320:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3331:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3316:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3316:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3336:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3309:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3309:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3309:62:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3380:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3392:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3403:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3388:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3388:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3380:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3207:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3221:4:9",
                "type": ""
              }
            ],
            "src": "3056:356:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3591:169:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3608:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3619:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3601:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3601:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3601:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3642:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3653:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3638:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3638:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3658:2:9",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3631:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3631:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3631:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3681:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3692:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3677:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3677:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3697:21:9",
                        "type": "",
                        "value": "Transaction Failed!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3670:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3670:49:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3670:49:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3728:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3740:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3751:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3736:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3736:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3728:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b090ac9b4324226978d6a01b7f3d156f7383ac0de7f6c2461d98ee4aa3a631d5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3568:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3582:4:9",
                "type": ""
              }
            ],
            "src": "3417:343:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3866:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3876:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3888:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3899:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3884:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3884:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3876:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3918:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3929:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3911:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3911:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3911:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3835:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3846:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3857:4:9",
                "type": ""
              }
            ],
            "src": "3765:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3995:181:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4030:115:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "4051:3:9"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4060:3:9",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4065:10:9",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4056:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4056:20:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4044:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4044:33:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4044:33:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4097:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4100:4:9",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4090:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4090:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4090:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "4125:3:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4130:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4118:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4118:17:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4118:17:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4011:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4018:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4014:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4014:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4008:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4008:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4005:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4154:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4165:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4168:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4161:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4161:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4154:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3978:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3981:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3987:3:9",
                "type": ""
              }
            ],
            "src": "3947:229:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_rational_10000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$698__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_10c700bd4f00d65f9a4fdc1c2b46e326cab0f7cfcffbbb0be0550bd3dd2213ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Token Transfer Failed!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_792276298ae008e353583c505bbe12270d1f9b4d0fdfeac39b599a549e632172__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"User claimed less than 24hrs ago\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b090ac9b4324226978d6a01b7f3d156f7383ac0de7f6c2461d98ee4aa3a631d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Transaction Failed!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "226:2272:8:-:0;;;994:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:4;936:18:0;:32::i;:::-;-1:-1:-1;;;;;1038:29:8;;1030:77;;;;-1:-1:-1;;;1030:77:8;;544:2:9;1030:77:8;;;526:21:9;583:2;563:18;;;556:30;622:34;602:18;;;595:62;-1:-1:-1;;;673:18:9;;;666:33;716:19;;1030:77:8;;;;;;;;1117:5;:14;;-1:-1:-1;;;;;;1117:14:8;-1:-1:-1;;;;;1117:14:8;;;;;;;;;;226:2272;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;14:323:9:-;97:6;150:2;138:9;129:7;125:23;121:32;118:2;;;171:6;163;156:22;118:2;202:16;;-1:-1:-1;;;;;247:31:9;;237:42;;227:2;;298:6;290;283:22;227:2;326:5;108:229;-1:-1:-1;;;108:229:9:o;516:225::-;226:2272:8;;;;;;",
  "deployedSourceMap": "226:2272:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1505:806;;;:::i;:::-;;1144:258;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;986:32:9;;;968:51;;956:2;941:18;1201:85:0;;;;;;;2081:198;;;;;;:::i;:::-;;:::i;417:18:8:-;;;;;-1:-1:-1;;;;;417:18:8;;;1505:806;1583:10;1570:24;;;;:12;:24;;;;;:40;;;:48;;1613:5;1570:48;:::i;:::-;2388:15;1554:64;1545:110;;;;-1:-1:-1;;;1545:110:8;;2897:2:9;1545:110:8;;;2879:21:9;;;2916:18;;;2909:30;2975:34;2955:18;;;2948:62;3027:18;;1545:110:8;;;;;;;;;1814:23;1840:192;;;;;;;;1871:10;-1:-1:-1;;;;;1840:192:8;;;;;1959:13;2388:15;;2317:179;1959:13;1840:192;;2056:10;2043:24;;;;:12;:24;;;;;;;;;:35;;;;-1:-1:-1;;;;;;2043:35:8;-1:-1:-1;;;;;2043:35:8;;;;;;;;;;-1:-1:-1;2043:35:8;;;;2097:5;:36;;-1:-1:-1;;;2097:36:8;;;;;1611:51:9;;;;2124:8:8;1678:18:9;;;1671:34;2043:35:8;;-1:-1:-1;2097:5:8;;;;:14;;1584:18:9;;2097:36:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2089:71;;;;-1:-1:-1;;;2089:71:8;;2139:2:9;2089:71:8;;;2121:21:9;2178:2;2158:18;;;2151:30;-1:-1:-1;;;2197:18:9;;;2190:52;2259:18;;2089:71:8;2111:172:9;2089:71:8;2279:24;;;;;2251:53;;3911:25:9;;;2267:10:8;;2251:53;;3884:18:9;2251:53:8;;;;;;;1505:806;:::o;1144:258::-;1208:5;;:54;;-1:-1:-1;;;1208:54:8;;1227:10;1208:54;;;1270:34:9;1247:4:8;1320:18:9;;;1313:43;1372:18;;;1365:34;;;-1:-1:-1;;;;;1208:5:8;;;;:18;;1205::9;;1208:54:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1200:86;;;;-1:-1:-1;;;1200:86:8;;3619:2:9;1200:86:8;;;3601:21:9;3658:2;3638:18;;;3631:30;-1:-1:-1;;;3677:18:9;;;3670:49;3736:18;;1200:86:8;3591:169:9;1200:86:8;1144:258;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;2490:2:9;2161:73:0::1;::::0;::::1;2472:21:9::0;2529:2;2509:18;;;2502:30;2568:34;2548:18;;;2541:62;-1:-1:-1;;;2619:18:9;;;2612:36;2665:19;;2161:73:0::1;2462:228:9::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;3258:2:9;1414:68:0;;;3240:21:9;;;3277:18;;;3270:30;3336:34;3316:18;;;3309:62;3388:18;;1414:68:0;3230:182:9;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;14:306:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:9;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:9:o;325:297::-;392:6;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:190;686:6;739:2;727:9;718:7;714:23;710:32;707:2;;;760:6;752;745:22;707:2;-1:-1:-1;788:23:9;;697:120;-1:-1:-1;697:120:9:o;3947:229::-;3987:3;4018:1;4014:6;4011:1;4008:13;4005:2;;;-1:-1:-1;;;4044:33:9;;4100:4;4097:1;4090:15;4130:4;4051:3;4118:17;4005:2;-1:-1:-1;4161:9:9;;3995:181::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract Faucet is Ownable {\n\n    using SafeMath for uint256; // sub add mul div\n\n    // uint 256 value;\n    // value = value + 1; - not safe - naive\n    // value = value.add(1); - safe\n\n    ERC20 public token;\n\n    struct Airdrop {\n        address claimer;\n        uint256 lastTimeClaimed;\n    }\n\n    event tokenAirdropped(address indexed claimer, uint256 claimTime);\n\n    // There can only be 3 indexed variables in an event\n\n    // @dev address is the claimer's address\n    // this address points to an Airdrop struct\n    mapping ( address => Airdrop ) private tokensDroped;\n    // before the pointer = argument of the mapper tokesDroped\n    // after the pointer = Type of variable stored\n\n    // tokensDroped[] - is like an array\n    // tokensDroped[address]\n\n    constructor(ERC20 _token) {\n        require(address(_token) != address(0), \"Token address can't be address zero\");\n        token = _token;\n    }\n\n    function depositToken(uint256 amount_) public {\n        require(token.transferFrom(msg.sender, address(this), amount_), \"Transaction Failed!\");\n        // Token transfer inside a require will revert with no gas expanses\n        // if the transfer fails\n    }\n\n    // If a user tries to claim tokens within a 24 hour spam, the claimTokens method should fail\n    function claimTokens() public {\n        require( currentTime() > tokensDroped[msg.sender].lastTimeClaimed + 86400, 'User claimed less than 24hrs ago');\n        // 24 * 60 = 1440 min\n        // 1440 min * 60 = 86400 sec\n        // REMEMBER: Do unit test using mocha for *days* native variable\n        \n        Airdrop memory _airdrop = Airdrop({\n            claimer: msg.sender, // msg.sender is the person claiming the token\n            lastTimeClaimed: currentTime() // register last time msg.sender claimed a token\n        });\n\n        tokensDroped[msg.sender] = _airdrop;\n\n        require(token.transfer(msg.sender, 10 ether), \"Token Transfer Failed!\"); // Is the same of - token.trasnferFrom(this(address), msg.sender, 10 ether)\n        emit tokenAirdropped(msg.sender, _airdrop.lastTimeClaimed);\n    }\n\n    function currentTime() private view returns (uint256) {\n        return block.timestamp;\n        // 352697412 - unix timestamp\n        // 2021-05-25 17:00:00 - human readable\n    }\n}\n\n",
  "sourcePath": "/home/menezes/Projects/solidity-classes/class-05/contracts/TokenFaucet.sol",
  "ast": {
    "absolutePath": "project:/contracts/TokenFaucet.sol",
    "exportedSymbols": {
      "Context": [
        823
      ],
      "ERC20": [
        698
      ],
      "Faucet": [
        1384
      ],
      "IERC20": [
        776
      ],
      "IERC20Metadata": [
        801
      ],
      "Ownable": [
        112
      ],
      "SafeMath": [
        1135
      ]
    },
    "id": 1385,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1251,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1252,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1385,
        "sourceUnit": 699,
        "src": "58:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1253,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1385,
        "sourceUnit": 113,
        "src": "114:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1254,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1385,
        "sourceUnit": 1136,
        "src": "167:57:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1255,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "245:7:8"
            },
            "id": 1256,
            "nodeType": "InheritanceSpecifier",
            "src": "245:7:8"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1384,
        "linearizedBaseContracts": [
          1384,
          112,
          823
        ],
        "name": "Faucet",
        "nameLocation": "235:6:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1259,
            "libraryName": {
              "id": 1257,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1135,
              "src": "266:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "260:27:8",
            "typeName": {
              "id": 1258,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "279:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 1262,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "430:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 1384,
            "src": "417:18:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$698",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 1261,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1260,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 698,
                "src": "417:5:8"
              },
              "referencedDeclaration": 698,
              "src": "417:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$698",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Faucet.Airdrop",
            "id": 1267,
            "members": [
              {
                "constant": false,
                "id": 1264,
                "mutability": "mutable",
                "name": "claimer",
                "nameLocation": "475:7:8",
                "nodeType": "VariableDeclaration",
                "scope": 1267,
                "src": "467:15:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1263,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "467:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1266,
                "mutability": "mutable",
                "name": "lastTimeClaimed",
                "nameLocation": "500:15:8",
                "nodeType": "VariableDeclaration",
                "scope": 1267,
                "src": "492:23:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1265,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "492:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Airdrop",
            "nameLocation": "449:7:8",
            "nodeType": "StructDefinition",
            "scope": 1384,
            "src": "442:80:8",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1273,
            "name": "tokenAirdropped",
            "nameLocation": "534:15:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1269,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "566:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1273,
                  "src": "550:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1271,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimTime",
                  "nameLocation": "583:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1273,
                  "src": "575:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:44:8"
            },
            "src": "528:66:8"
          },
          {
            "constant": false,
            "id": 1278,
            "mutability": "mutable",
            "name": "tokensDroped",
            "nameLocation": "790:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 1384,
            "src": "751:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Airdrop_$1267_storage_$",
              "typeString": "mapping(address => struct Faucet.Airdrop)"
            },
            "typeName": {
              "id": 1277,
              "keyType": {
                "id": 1274,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "761:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "751:30:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Airdrop_$1267_storage_$",
                "typeString": "mapping(address => struct Faucet.Airdrop)"
              },
              "valueType": {
                "id": 1276,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1275,
                  "name": "Airdrop",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1267,
                  "src": "772:7:8"
                },
                "referencedDeclaration": 1267,
                "src": "772:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Airdrop_$1267_storage_ptr",
                  "typeString": "struct Faucet.Airdrop"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1301,
              "nodeType": "Block",
              "src": "1020:118:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1287,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1281,
                              "src": "1046:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$698",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$698",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 1286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1038:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1285,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1038:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1038:15:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1065:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1057:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1289,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1057:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1057:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1038:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616464726573732063616e27742062652061646472657373207a65726f",
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e1acc0c79c7ca56987ee639045353e11bfe8d9f56f332bb7fc220e0bf4f558c",
                          "typeString": "literal_string \"Token address can't be address zero\""
                        },
                        "value": "Token address can't be address zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e1acc0c79c7ca56987ee639045353e11bfe8d9f56f332bb7fc220e0bf4f558c",
                          "typeString": "literal_string \"Token address can't be address zero\""
                        }
                      ],
                      "id": 1284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1030:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1030:77:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1296,
                  "nodeType": "ExpressionStatement",
                  "src": "1030:77:8"
                },
                {
                  "expression": {
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1297,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1262,
                      "src": "1117:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$698",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1298,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "1125:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$698",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1117:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$698",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "1117:14:8"
                }
              ]
            },
            "id": 1302,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1281,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1012:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1302,
                  "src": "1006:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$698",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1280,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1279,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 698,
                      "src": "1006:5:8"
                    },
                    "referencedDeclaration": 698,
                    "src": "1006:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$698",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1005:14:8"
            },
            "returnParameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:0:8"
            },
            "scope": 1384,
            "src": "994:144:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1321,
              "nodeType": "Block",
              "src": "1190:212:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1310,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1227:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1227:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1314,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1247:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Faucet_$1384",
                                  "typeString": "contract Faucet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Faucet_$1384",
                                  "typeString": "contract Faucet"
                                }
                              ],
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1239:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1312,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1239:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1239:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1316,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1304,
                            "src": "1254:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1308,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1262,
                            "src": "1208:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$698",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 312,
                          "src": "1208:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1208:54:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e204661696c656421",
                        "id": 1318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1264:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b090ac9b4324226978d6a01b7f3d156f7383ac0de7f6c2461d98ee4aa3a631d5",
                          "typeString": "literal_string \"Transaction Failed!\""
                        },
                        "value": "Transaction Failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b090ac9b4324226978d6a01b7f3d156f7383ac0de7f6c2461d98ee4aa3a631d5",
                          "typeString": "literal_string \"Transaction Failed!\""
                        }
                      ],
                      "id": 1307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1200:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1200:86:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1320,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:86:8"
                }
              ]
            },
            "functionSelector": "6215be77",
            "id": 1322,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToken",
            "nameLocation": "1153:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "1174:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1322,
                  "src": "1166:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1165:17:8"
            },
            "returnParameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1190:0:8"
            },
            "scope": 1384,
            "src": "1144:258:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1373,
              "nodeType": "Block",
              "src": "1535:776:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1326,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1383,
                            "src": "1554:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1554:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1328,
                                "name": "tokensDroped",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1278,
                                "src": "1570:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Airdrop_$1267_storage_$",
                                  "typeString": "mapping(address => struct Faucet.Airdrop storage ref)"
                                }
                              },
                              "id": 1331,
                              "indexExpression": {
                                "expression": {
                                  "id": 1329,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1583:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1583:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1570:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Airdrop_$1267_storage",
                                "typeString": "struct Faucet.Airdrop storage ref"
                              }
                            },
                            "id": 1332,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lastTimeClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1266,
                            "src": "1570:40:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3836343030",
                            "id": 1333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1613:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_86400_by_1",
                              "typeString": "int_const 86400"
                            },
                            "value": "86400"
                          },
                          "src": "1570:48:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1554:64:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220636c61696d6564206c657373207468616e2032346872732061676f",
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1620:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_792276298ae008e353583c505bbe12270d1f9b4d0fdfeac39b599a549e632172",
                          "typeString": "literal_string \"User claimed less than 24hrs ago\""
                        },
                        "value": "User claimed less than 24hrs ago"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_792276298ae008e353583c505bbe12270d1f9b4d0fdfeac39b599a549e632172",
                          "typeString": "literal_string \"User claimed less than 24hrs ago\""
                        }
                      ],
                      "id": 1325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1545:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:110:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1338,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:110:8"
                },
                {
                  "assignments": [
                    1341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1341,
                      "mutability": "mutable",
                      "name": "_airdrop",
                      "nameLocation": "1829:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1373,
                      "src": "1814:23:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Airdrop_$1267_memory_ptr",
                        "typeString": "struct Faucet.Airdrop"
                      },
                      "typeName": {
                        "id": 1340,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1339,
                          "name": "Airdrop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1267,
                          "src": "1814:7:8"
                        },
                        "referencedDeclaration": 1267,
                        "src": "1814:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Airdrop_$1267_storage_ptr",
                          "typeString": "struct Faucet.Airdrop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1348,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1343,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1871:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1871:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1345,
                          "name": "currentTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "1959:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1959:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1342,
                      "name": "Airdrop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1267,
                      "src": "1840:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Airdrop_$1267_storage_ptr_$",
                        "typeString": "type(struct Faucet.Airdrop storage pointer)"
                      }
                    },
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "claimer",
                      "lastTimeClaimed"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1840:192:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Airdrop_$1267_memory_ptr",
                      "typeString": "struct Faucet.Airdrop memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1814:218:8"
                },
                {
                  "expression": {
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1349,
                        "name": "tokensDroped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1278,
                        "src": "2043:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Airdrop_$1267_storage_$",
                          "typeString": "mapping(address => struct Faucet.Airdrop storage ref)"
                        }
                      },
                      "id": 1352,
                      "indexExpression": {
                        "expression": {
                          "id": 1350,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2056:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2056:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2043:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Airdrop_$1267_storage",
                        "typeString": "struct Faucet.Airdrop storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1353,
                      "name": "_airdrop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1341,
                      "src": "2070:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Airdrop_$1267_memory_ptr",
                        "typeString": "struct Faucet.Airdrop memory"
                      }
                    },
                    "src": "2043:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Airdrop_$1267_storage",
                      "typeString": "struct Faucet.Airdrop storage ref"
                    }
                  },
                  "id": 1355,
                  "nodeType": "ExpressionStatement",
                  "src": "2043:35:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1359,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2112:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2112:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "3130",
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2124:8:8",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 1357,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1262,
                            "src": "2097:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$698",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 236,
                          "src": "2097:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2097:36:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e205472616e73666572204661696c656421",
                        "id": 1363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2135:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10c700bd4f00d65f9a4fdc1c2b46e326cab0f7cfcffbbb0be0550bd3dd2213ad",
                          "typeString": "literal_string \"Token Transfer Failed!\""
                        },
                        "value": "Token Transfer Failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10c700bd4f00d65f9a4fdc1c2b46e326cab0f7cfcffbbb0be0550bd3dd2213ad",
                          "typeString": "literal_string \"Token Transfer Failed!\""
                        }
                      ],
                      "id": 1356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2089:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2089:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1365,
                  "nodeType": "ExpressionStatement",
                  "src": "2089:71:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1367,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2267:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2267:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1369,
                          "name": "_airdrop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "2279:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Airdrop_$1267_memory_ptr",
                            "typeString": "struct Faucet.Airdrop memory"
                          }
                        },
                        "id": 1370,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastTimeClaimed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1266,
                        "src": "2279:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1366,
                      "name": "tokenAirdropped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "2251:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2251:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1372,
                  "nodeType": "EmitStatement",
                  "src": "2246:58:8"
                }
              ]
            },
            "functionSelector": "48c54b9d",
            "id": 1374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTokens",
            "nameLocation": "1514:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1525:2:8"
            },
            "returnParameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1535:0:8"
            },
            "scope": 1384,
            "src": "1505:806:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1382,
              "nodeType": "Block",
              "src": "2371:125:8",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1379,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "2388:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "2388:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1378,
                  "id": 1381,
                  "nodeType": "Return",
                  "src": "2381:22:8"
                }
              ]
            },
            "id": 1383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentTime",
            "nameLocation": "2326:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2337:2:8"
            },
            "returnParameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1383,
                  "src": "2362:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2362:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2361:9:8"
            },
            "scope": 1384,
            "src": "2317:179:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1385,
        "src": "226:2272:8",
        "usedErrors": []
      }
    ],
    "src": "33:2467:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0x4187F7377BB8e031eb762414Bc0A7632632a615C",
      "transactionHash": "0x4e73dfc7d72eb2bcdb3ee532cea73947bbe4705e0dbd3dc28942c41b797312e8"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-10-07T18:36:45.197Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}